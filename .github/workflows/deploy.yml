name: Docker CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        coq_version: ['8.13.2']
        ocaml_version: ['4.13.1-flambda']
      fail-fast: false          # don't stop jobs if one fails

    permissions:
      contents: write

    env:
      GH_PAGES: 'gh-pages'
      DEST_DIR: 'public'
      CACHE_DIR: 'content'

    steps:
      - uses: actions/checkout@v4

      - name: Copy Alectryon's caches
        run: |
          git fetch --depth=1 origin
          if git branch ${GH_PAGES} origin/${GH_PAGES}; then
            if git restore --source=${GH_PAGES} "${CACHE_DIR}"; then
              mkdir -p "${DEST_DIR}"
              mv -v "${CACHE_DIR}" "${DEST_DIR}"
            fi
          fi

      - uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq_version }}
          ocaml_version: ${{ matrix.ocaml_version }}
          export: 'CACHE_DIR DEST_DIR'
          custom_script: |
            startGroup 'Install Equations & SSReflect'
              opam repo add coq-released https://coq.inria.fr/opam/released
              opam install coq-equations coq-mathcomp-ssreflect
            endGroup
            startGroup "Install APT/PyPI dependencies"
              sudo apt-get update -y -q
              sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
                --no-install-recommends --no-install-suggests python3-pip
              python3 -m pip install --user alectryon
            endGroup
            startGroup "Create site's directory"
              sudo mkdir -p "${DEST_DIR}"
              sudo chown -R coq:coq "${DEST_DIR}"
            endGroup
            startGroup "Use Alectryon"
              for subdir in examples notes; do
                find "${subdir}" -name '*.v' -execdir basename {} '.v' \; | \
                  xargs -I{} alectryon \
                    --frontend coq+rst --backend webpage \
                    --no-header --long-line-threshold 80 \
                    --cache-directory "${DEST_DIR}/${CACHE_DIR}" \
                    --cache-compression gzip \
                    --output "${DEST_DIR}/${subdir}/{}.html" "${subdir}/{}.v"
              done
            endGroup

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ env.GH_PAGES }}
          publish_dir: ${{ env.DEST_DIR }}
          enable_jekyll: true
