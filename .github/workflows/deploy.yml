name: Docker CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    env:
      CACHE_DIR: content
      GH_PAGES: gh-pages
      SITE_DIR: public
      SRC_DIRS: examples notes

    steps:
      - uses: actions/checkout@v4

      - name: Copy Alectryon's caches
        run: |
          git fetch --depth=1 origin
          if git branch ${GH_PAGES} origin/${GH_PAGES}; then
            if git restore --source=${GH_PAGES} "${CACHE_DIR}"; then
              mkdir -p "${SITE_DIR}"
              mv -v "${CACHE_DIR}" "${SITE_DIR}"
            fi
          fi

      - uses: coq-community/docker-coq-action@v1
        with:
          custom_image: mathcomp/mathcomp:1.16.0-coq-8.13
          export: CACHE_DIR SITE_DIR SRC_DIRS
          custom_script: |
            startGroup "Install APT/PyPI dependencies"
              sudo apt-get update -y -q
              sudo DEBIAN_FRONTEND=noninteractive apt-get install -y -q \
                --no-install-recommends --no-install-suggests python3-pip
              python3 -m pip install --user alectryon
            endGroup
            startGroup "Create site's directory"
              sudo mkdir -p "${SITE_DIR}"
              sudo chown -R coq:coq "${SITE_DIR}"
            endGroup
            startGroup "Use Alectryon"
              for dir in ${SRC_DIRS}; do
                find "${dir}" -name '*.v' -execdir basename {} '.v' \; | \
                  xargs -I{} alectryon \
                    --frontend coq+rst --backend webpage \
                    --no-header --html-dialect=html5 --long-line-threshold 80 \
                    --cache-directory "${SITE_DIR}/${CACHE_DIR}" \
                    --cache-compression gzip \
                    --output "${SITE_DIR}/${dir}/{}.html" "${dir}/{}.v"
              done
            endGroup

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: ${{ env.GH_PAGES }}
          publish_dir: ${{ env.SITE_DIR }}
          enable_jekyll: true
